"""from aiogram import types, Router
from app.models.data import courses_by_age

router = Router()


@router.message(lambda msg: msg.text == "üìö –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å—ã")
async def courses_handler(message: types.Message):
    text = "üìö <b>–ö—É—Ä—Å—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –≥—Ä—É–ø–ø–∞–º:</b>\n\n"

    for age, topics in courses_by_age.items():
        text += f"<b>{age}</b>:\n"
        for course in topics:
            text += f"‚Ä¢ {course}\n"
        text += "\n"

    await message.answer(text, parse_mode="HTML")"""
from aiogram import types, Router
from aiogram.filters.command import Command
from app.models.data import courses_by_age

router = Router()

# –û–±—â–∏–π —Ç–µ–∫—Å—Ç –∫—É—Ä—Å–æ–≤
def get_courses_text():
    text = "üìö <b>–ö—É—Ä—Å—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º –≥—Ä—É–ø–ø–∞–º:</b>\n\n"
    for age, topics in courses_by_age.items():
        text += f"<b>{age}</b>:\n"
        for course in topics:
            text += f"‚Ä¢ {course}\n"
        text += "\n"
    return text

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /courses
@router.message(Command("courses"))
async def courses_command(message: types.Message):
    await message.answer(get_courses_text(), parse_mode="HTML")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ üìö –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å—ã
@router.message(lambda msg: msg.text == "üìö –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—É—Ä—Å—ã")
async def courses_button(message: types.Message):
    await message.answer(get_courses_text(), parse_mode="HTML")
